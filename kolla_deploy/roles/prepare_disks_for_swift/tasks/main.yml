# Copyright (c) 2016-2017, Intel Corporation.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Intel Corporation nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

---
  - name: Check if second disk is present
    stat: path={{ disk_for_swift }}
    register: st

  - debug: msg="Whoops! The second disk is missing. It is needed for HA configuration"
    when: st.stat.exists != True

  - name: set disk to be used for swift
    set_fact:
      disk_to_use: "{{ disk_for_swift }}"
      partition_to_use: "{{ disk_for_swift }}1"
      test_disk_name_arg: "-l"
    when: st.stat.exists == True

  - name: set virtual disk to be used for swift
    set_fact:
      disk_to_use: "/dev/loop1"
      partition_to_use: "/dev/loop1p1"
      test_disk_name_arg: "/dev/loop1 print"
      virtual_disk_file: "/srv/swift-disk"
    when: st.stat.exists != True

  - name: Create directory for virtual disk file
    file: path=/srv state=directory
    when: st.stat.exists != True

  - name: Create virtual disk file
    shell: truncate -s 100G {{ virtual_disk_file }}
    when: st.stat.exists != True

  - name: Set access rights to virtual disk file
    file:
      path: "{{ virtual_disk_file }}"
      owner: root
      group: root
      mode: 0666
    when: st.stat.exists != True

  - name: test disk partition mounting
    shell: grep "{{ partition_to_use }}" /proc/mounts
    register: is_mounted
    failed_when: is_mounted.rc == 2

  - name: Remove old loopback if exists
    shell: if losetup -l | grep "{{ disk_to_use }}"; then losetup -d {{ disk_to_use }}; fi
    when: st.stat.exists != True and is_mounted.stdout == ""

  - name: Create loopback for virtual disk
    command: losetup {{ disk_to_use }} {{ virtual_disk_file }}
    when: st.stat.exists != True and is_mounted.stdout == ""

  - name: test disk name
    shell: parted {{ test_disk_name_arg }} | grep KOLLA_SWIFT_DATA
    register: has_name
    failed_when: has_name.rc == 2

  - name: disk is in use -> skip rest
    debug: msg="Disk is in use -> skip disk preparation"
    when: is_mounted.stdout != "" and has_name.stdout != ""

  - name: Cleanup swift disk "{{ disk_to_use }}"
    command: dd if=/dev/zero bs=4096 count=4 of={{ disk_to_use }}
    when: has_name.stdout == ""

  - name: create swift partition on disk "{{ disk_to_use }}"
    command: parted {{ disk_to_use }} -s -- mklabel gpt mkpart KOLLA_SWIFT_DATA xfs 1 -1
    when: has_name.stdout == ""

  - name: create fs on disk partition "{{ partition_to_use }}"
    filesystem: fstype=xfs dev={{ partition_to_use }} opts="-f -L d0"
    when: has_name.stdout == ""

#Test of partition label
#  - name: Looking up disks for Swift
#    command: docker exec -t kolla_toolbox sudo -E /usr/bin/ansible localhost
#      -m find_disks
#      -a "name=KOLLA_SWIFT_DATA
#          match_mode=strict"

