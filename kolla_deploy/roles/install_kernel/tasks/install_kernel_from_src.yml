---
  - name: set kernel dest
    set_fact:
      kernel_build_dir: /usr/src/kernels/linux-stable-rt/

  - name: Install kernel-build dependencies
    action: "{{ ansible_pkg_mgr }} name={{ item }} state=present"
    with_items:
      - git
      - "{{ ncurses_package[ansible_os_family] }}"

  - name: Clone kernel
    git:
      repo: "{{ kernel_data.kernel_base_url }}"
      dest: "{{ kernel_build_dir }}"
      version: "{{ kernel_data.kernel_tag }}"
      accept_hostkey: yes
      recursive: no

  - name: copy kernel config
    command: cp "/boot/config-{{ ansible_kernel }}" "{{ kernel_build_dir }}/kernel/.config"

  - name: make oldconfig
    shell: 'yes "" | make oldconfig'
    args:
      chdir: "{{ kernel_build_dir }}/kernel"

  - name: set CONFIG_PREEMPT_RT_FULL
    lineinfile:
      dest: "{{ kernel_build_dir }}/kernel/.config"
      regexp: 'CONFIG_PREEMPT_RT_FULL'
      line: "CONFIG_PREEMPT_RT_FULL=yes"
      state: present

  - name: set CONFIG_MAXSMP
    lineinfile:
      dest: "{{ kernel_build_dir }}/kernel/.config"
      regexp: '# CONFIG_MAXSMP is not set'
      line: "CONFIG_MAXSMP=y"
      state: present

  - name: make oldconfig
    shell: 'yes "" | make oldconfig && make -j {{ ansible_processor_vcpus }} &>> /usr/src/kernels/linux-stable-rt/compile-kernel-log && make -j {{ ansible_processor_vcpus }} modules_install &>> /usr/src/kernels/linux-stable-rt/compile-kernel-log && make -j {{ ansible_processor_vcpus }} install &>> /usr/src/kernels/linux-stable-rt/compile-kernel-log'
    args:
      chdir: "{{ kernel_build_dir }}/kernel"
      # force bash because of &>>
      executable: /bin/bash

  - name: configure grub for Ubuntu
    include: grub_ubuntu.yml
    when: ansible_os_family == "Debian"

  - name: configure grub for Red Hat
    include: grub_redhat.yml
    when: ansible_os_family == "RedHat"

  - include: control_kernel_upgrade.yml




  #TODO: change boot order
#  grub2-set-default "$(grep menuentry /boot/grub2/grub.cfg | grep "Twenty" | cut -d"'" -f2)"
#  grubby
