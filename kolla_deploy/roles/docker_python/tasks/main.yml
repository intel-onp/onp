# Copyright (c) 2016-2017, Intel Corporation.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Intel Corporation nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

---
# pip from distro is old
#  - name: install pip
#    action: "{{ ansible_pkg_mgr }} name=python-pip state=latest"

  - name: get pip version
    command: pip --version
    register: get_installed_pip_version
    ignore_errors: yes

  - name: check pip version
    set_fact:
      pip_version_okay: "{{ get_installed_pip_version|succeeded and get_installed_pip_version.stdout.split()[1].split('.')|map('int')|list >= pip_version.split('.')|map('int')|list }}"

  - name: install easy_install
    action: "{{ ansible_pkg_mgr }} name={{item}} state=latest"
    with_items:
       - python-setuptools

  # use wget because of https and proxies
  - name: download get-pip.py
    command: wget -nv "{{ get_pip_url }}"
    register:  get_pip_download
    when: not pip_version_okay

  - debug: var=get_pip_download

  - name: install pip
    command: python get-pip.py
    when: not pip_version_okay and get_pip_download|success

  # pin the version, don't use latest
  # disable version check to prevent extra https access
  - name: install docker-py
    pip: name=docker-py state=present version="{{ docker_python_version }}" extra_args="--disable-pip-version-check"

  - name: install shade
    pip:
      name: shade
      state: present
      extra_args: "--disable-pip-version-check"
    when: "'control' in group_names"

  - name: install netaddr
    pip:
      name: netaddr
      state: present
      extra_args: "--disable-pip-version-check"
