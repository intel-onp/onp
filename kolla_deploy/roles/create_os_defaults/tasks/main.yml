# Copyright (c) 2017, Intel Corporation.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Intel Corporation nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

---
  - set_fact:
      keystone_ext_port: "5000"
    when: kolla_internal_vip_address|string() != kolla_external_vip_address|string()

  - name: create openstack dir
    file:
      path: "/etc/openstack"
      state: directory

  - name: create clouds.yaml
    template:
      src: clouds.yaml.j2
      dest: "/etc/openstack/clouds.yaml"

  - name: create demo project
    os_project:
      cloud: adminproject
      state: present
      name: demo
      domain_id: default
      enabled: True
    register: demo_project_create

  - name: create demo user
    os_user:
      cloud: adminproject
      state: present
      name: demo
      password: password
      domain: default
      default_project: demo

  - name: add demo to demo project
    os_user_role:
      cloud: adminproject
      user: demo
      role: admin
      project: demo

  - name: add admin to demo project
    os_user_role:
      cloud: adminproject
      user: admin
      role: admin
      project: demo

  - name: create demo network
    os_network:
      cloud: demoproject
      state: present
      name: demo-network

# kuryr_kubernetes dns nameserver issue
# Will add bug when available
# NO DNS NAMESERVERS SET
  - name: create demo subnet
    os_subnet:
      cloud: demoproject
      state: present
      network_name: demo-network
      name: demo-subnet
      cidr: "{{ os_defaults.networks.int['cidr'] }}"
    register: demo_subnet_create
    when: use_kuryr_kubernetes|default(False)

# kuryr_kubernetes dns nameserver issue
# Will add bug when available
# Dns nameservers set
  - name: create demo subnet
    os_subnet:
      cloud: demoproject
      state: present
      network_name: demo-network
      name: demo-subnet
      cidr: "{{ os_defaults.networks.int['cidr'] }}"
      dns_nameservers:
        - "{{ os_defaults.networks.int['dns_nameservers'] }}"
    when: not use_kuryr_kubernetes|default(False)

  - name: create public1 external network
    os_network:
      cloud: demoproject
      state: present
      name: public1
      external: true
      provider_network_type: flat
      provider_physical_network: physnet1

  - name: create public1 subnet
    os_subnet:
      cloud: demoproject
      state: present
      network_name: public1
      name: public1-subnet
      enable_dhcp: false
      cidr: "{{ os_defaults.networks.ext['cidr'] }}"
      gateway_ip: "{{ os_defaults.networks.ext['gateway'] }}"
      allocation_pool_start: "{{ os_defaults.networks.ext['cidr'] | ipaddr(os_defaults.networks.ext['allocation_start']) | ipaddr('address') }}"
      allocation_pool_end: "{{ os_defaults.networks.ext['cidr'] | ipaddr(os_defaults.networks.ext['allocation_end']) | ipaddr('address') }}"

  - name: create demo router
    os_router:
      cloud: demoproject
      state: present
      name: demo-router
      network: public1
      enable_snat: true
      interfaces:
        - demo-subnet

  - name: download images
    get_url:
      url: "{{ os_defaults.images }}"
      dest: "/tmp/{{ image_file }}"
      validate_certs: False

  - name: add image to glance
    os_image:
      cloud: adminproject
      state: present
      name: "{{ image_name }}"
      filename: "/tmp/{{ image_file }}"
      container_format: bare
      disk_format: qcow2
      is_public: true
    register: demo_project_image

  - include: default_flavors.yml
    when: ovs_type != "ovs-dpdk"

  - include: dpdk_flavors.yml
    when: ovs_type == "ovs-dpdk"

  - name: create demo-security group
    os_security_group:
      cloud: demoproject
      state: present
      name: demo-security
    register: demo_security_group_create

  - name: add icmp to demo secruity group
    os_security_group_rule:
      cloud: demoproject
      security_group: demo-security
      protocol: icmp
      remote_ip_prefix: 0.0.0.0/0
      direction: ingress

  - name: add ssh to demo security group
    os_security_group_rule:
      cloud: demoproject
      security_group: demo-security
      protocol: tcp
      port_range_min: 22
      port_range_max: 22
      remote_ip_prefix: 0.0.0.0/0
      direction: ingress

  - name: add 8000 to demo security group
    os_security_group_rule:
      cloud: demoproject
      security_group: demo-security
      protocol: tcp
      port_range_min: 8000
      port_range_max: 8000
      remote_ip_prefix: 0.0.0.0/0
      direction: ingress

  - name: add 8080 to demo security group
    os_security_group_rule:
      cloud: demoproject
      security_group: demo-security
      protocol: tcp
      port_range_min: 8080
      port_range_max: 8080
      remote_ip_prefix: 0.0.0.0/0
      direction: ingress
